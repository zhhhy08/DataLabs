apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: geneva-reader
rules:
- apiGroups: [""]
  resources: ["pods", "namespaces"]
  verbs: ["get", "watch", "list"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: geneva-read-global
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.monitorNameSpace }}
roleRef:
  kind: ClusterRole
  name: geneva-reader
  apiGroup: rbac.authorization.k8s.io
---
# Telegraf Service Account for kubelet API
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: metric-scanner-kubelet-api-admin
  #ClusterRoleBinding in this file allows full access for ServiceAccount to the kubelet API 
  #that lets you query and manipulate the state of API objects in Kubernetes
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.monitorNameSpace }}
roleRef:
  kind: ClusterRole
  #'system:' indicates that the resource is directly managed by the cluster control plane
  name: system:kubelet-api-admin
  apiGroup: rbac.authorization.k8s.io
---
#An RBAC Role or ClusterRole contains rules that represent a set of permissions. 
#Permissions are purely additive (there are no "deny" rules).
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: influx:cluster:viewer
  labels:
    #When you create the "influx:cluster:viewer" ClusterRole, 
    #the rules below will be added to the "influx:telegraf" ClusterRole as aggregationRule was defined as 'true'
    rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
rules:
  - apiGroups: ["", "apps"]
    resources: ["pods", "namespaces", "nodes", "deployments", "daemonsets"]
    verbs: ["get", "list"]
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: influx:telegraf
aggregationRule:
  clusterRoleSelectors:
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-view-telegraf: "true"
        #aggregating several ClusterRoles into one combined ClusterRole
    - matchLabels:
        rbac.authorization.k8s.io/aggregate-to-view: "true"
        #adopting rules through aggregate-view-telegraf and to 'view' default role through aggregate-to-view
rules: [] # Rules are automatically filled in by the controller manager.
---
#ClusterRoleBinding and ClusterRole granting access to the serviceaccount in the namespace 'default' 
#to use roles defined under 'influx:telegraf'
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: influx:telegraf:viewer
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: influx:telegraf
subjects:
  - kind: ServiceAccount
    name: default
    namespace: {{ .Values.monitorNameSpace }}
# Notes: Telegraf config file goes bottom to top (processors placing is bottom to top)

# Global tags can be specified here in key="value" format.
[global_tags]
region="${REGION}"
scaleUnit="${SCALE_UNIT}"
component="${COMPONENT}"
service="${SERVICE}"

# Configuration for telegraf agent
[agent]
## Default data collection interval for all inputs
interval = "30s"
round_interval = true
metric_batch_size = 1000
metric_buffer_limit = 10000
collection_jitter = "0s"
flush_interval = "10s"
flush_jitter = "0s"
precision = ""
debug = true
quiet = false
logfile = ""
hostname = ""
omit_hostname = false

###############################################################################
#                            OUTPUT PLUGINS                                   #
###############################################################################

# Configuration for sending metrics to InfluxDB
[[outputs.influxdb]]
urls = ["udp://geneva-services.monitor-namespace:8089"]

# [[outputs.file]] # Debugging output
# files = ["stdout"]

###############################################################################
#                          PROCESSOR PLUGINS                                  #
###########################################
# Config order is bottom to top (there are ways to order with params, but this is simpler)
# Renaming fields to be more understandable in Geneva Accounts

# Rename all metrics to be under the platformmetrics namespace
[[processors.override]]
  ## All modifications on inputs and aggregators can be overridden:
  name_override = "PlatformMetrics"

[[processors.rename]]
  [[processors.rename.replace]]
    field = "resource_limits_millicpu_units"
    dest = "container_resource_limits_millicpu_units"
  [[processors.rename.replace]]
    field = "resource_limits_memory_bytes"
    dest = "container_resource_limits_memory_bytes"

[[processors.rename]]
  [[processors.rename.replace]]
    field = "used"
    dest = "cluster_disk_used"
  [[processors.rename.replace]]
    field = "used_percent"
    dest = "cluster_disk_used_percent"

[[processors.rename]]
  [[processors.rename.replace]]
    field = "usage_idle"
    dest = "cluster_cpu_not_used_percent"

[[processors.rename]]
  [[processors.rename.replace]]
    field = "total"
    dest = "cluster_memory_total_bytes"
  [[processors.rename.replace]]
    field = "used"
    dest = "cluster_memory_used_bytes"
  [[processors.rename.replace]]
    field = "used_percent"
    dest = "cluster_memory_used_percent"

###############################################################################
#                            INPUT PLUGINS                                    #
###############################################################################
[[inputs.kube_inventory]]
## URL for the Kubernetes API
url = "https://kubernetes.default"

## Namespace to use. Set to "" to use all namespaces.
namespace = ""
resource_include = ["deployments", "nodes", "daemonsets", "pods", "statefulsets"]
# persistentvolumes are not supported
fieldpass = ["capacity_millicpu_cores", "capacity_memory_bytes", "capacity_pods", "resource_limits_millicpu_units", "resource_limits_memory_bytes"]
insecure_skip_verify = true
## Uncomment to remove deprecated metrics.
fielddrop = ["terminated_reason"]

### More VMSS Information

# Read metrics about cpu usage
[[inputs.cpu]]
totalcpu = true
percpu = false
fieldpass = ["usage_idle"]

# Read metrics about disk usage by mount point
[[inputs.disk]]
## fields collected
fieldpass = ["used","used_percent"]
ignore_fs = ["tmpfs", "devtmpfs", "devfs", "overlay", "aufs", "squashfs"]

# Read metrics about memory usage
[[inputs.mem]]
fieldpass = ["total","used","used_percent"]

apiVersion: secrets-store.csi.x-k8s.io/v1
kind: SecretProviderClass
metadata:
  name: {{ .Values.resourceFetcherService.secretProviderClassName }}
  namespace: {{ .Values.resourceFetcherNameSpace }}
spec:
  provider: azure
  parameters:
    usePodIdentity: "false"
    useVMManagedIdentity: "true"
    userAssignedIdentityID: {{ .Values.keyVault.clientId }}
    keyvaultName: {{ .Values.keyVault.name }}
    tenantId: {{ .Values.keyVault.tenantId }}
    objects:  |
      array:
        - |
          objectName: {{ .Values.resourceFetcherService.armClient.certificateName }}
          objectType: secret
          {{- if .Values.resourceFetcherService.qfdClient.certificateName }}
        - |
          objectName: {{ .Values.resourceFetcherService.qfdClient.certificateName }}
          objectType: secret
          {{- end }}
          {{- if and .Values.resourceFetcherService.casClient.certificateName (ne .Values.resourceFetcherService.casClient.certificateName .Values.resourceFetcherService.qfdClient.certificateName) }}
        - |
          objectName: {{ .Values.resourceFetcherService.casClient.certificateName }}
          objectType: secret
          {{- end }}
          {{- if .Values.resourceFetcherService.armAdminClient.certificateName }}
        - |
          objectName: {{ .Values.resourceFetcherService.armAdminClient.certificateName }}
          objectType: secret
          {{- end }}
    #secretObjects:                              # [OPTIONAL] SecretObjects defines the desired state of synced Kubernetes secret objects
    #- data:
    #  - key: username                           # data field to populate
    #    objectName: foo1                        # name of the mounted content to sync; this could be the object name or the object alias
    #  secretName: foosecret                     # name of the Kubernetes secret object
    #  type: Opaque   

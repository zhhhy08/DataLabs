# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

adminServiceNameSpace: admin-namespace
resourceFetcherNameSpace: resource-fetcher-namespace
monitorNameSpace: monitor-namespace
agentPoolName: agentpool

helmInfo:
  adminserviceRelease: adminservice
  resourcefetcherserviceRelease: resourcefetcherservice

solutionInfo:
  environment: Prod
  scaleUnit: resource-fetcher

resourceFetcherServiceAccount:
  name: resource-fetcher-identity
  tenantId: 33e01921-4d64-4f8c-a055-5bdaffd5e33d

resourceFetcherService:
  name: resource-fetcher
  adminPortServiceName: resource-fetcher-admin-service
  replicaCount: 5
  minReadySeconds: 3
  secretProviderClassName: azure-kvname-user-msi
  tenantId: 33e01921-4d64-4f8c-a055-5bdaffd5e33d
  aadAuthority: https://login.microsoftonline.com
  aadTokenIssuer: https://sts.windows.net/33e01921-4d64-4f8c-a055-5bdaffd5e33d/
  aadTokenAudience: https://resourcefetcherservice-prod.msazurecloud.onmicrosoft.com
  openIdConfigurationURI: /common/v2.0/.well-known/openid-configuration
  signingTokensRefreshDuration: 1.00:00:00
  signingTokensFailedRefreshDuration: 00:10:00

  # ARM Client Related
  armClient:
    endpoints: https://management.azure.com
    backupEndpoints:
    firstPartyAppId: 509e4652-da8d-478d-a730-e9d4a1996ca4
    certificateName: aad-rp-prod-arg-first-party-app-cert
    armTokenResource: https://management.core.windows.net
    clientOption: "HttpRequestVersion=2.0;ConnectTimeout=00:00:05;EnableMultipleHttp2Connections=false"
    
    # Default TimeOut
    # ARG uses 5 secs ARM timeout,
    defaultArmClientGetResourceTimeOutInSec: "5/20"
    defaultArmClientGenericApiTimeOutInSec: "20/40"

    # ARM Resource Type TimeOut Mapping
    armClientResourceTimeOutMappings:
    # armClientResourceTimeOutMappings: <resource type>|30/60
    # e.g.)
    #   "microsoft.compute/disks|30/60;
    #    microsoft.compute/virtualmachines|30/60"

    # ARM Generic API Time outMappings
    armClientGenericApiTimeOutMappings:  
    # armClientGenericApiTimeOutMappings: <uriPath>|30/60
    # e.g.)
    #   "/providers/Microsoft.Authorization/policySetDefinitions|30/60"

  # Cas Client Related
  casClient:
    endpoints:
    backupEndpoints:
    certificateName:
    dstsSkipServerCertificateValidation:
    dstsClientId:
    dstsServerId:
    dstsClientHome:
    dstsServerHome:
    dstsServerRealm:
    clientOption: "HttpRequestVersion=2.0;ConnectTimeout=00:00:05;EnableMultipleHttp2Connections=true"

    # Default TimeOut
    defaultCasClientTimeOutInSec: "10/20"
    
    # Cas Client Call TimeOut Mapping
    casClientTimeOutMappings:
    # casClientTimeOutMappings:  <method>|30/60
    # e.g.)
    #   "GetCasCapacityCheckAsync|30/60"

  # ARG Query FrontDoor Client Related
  qfdClient:
    endpoints:
    backupEndpoints:
    certificateName:
    dstsSkipServerCertificateValidation:
    dstsClientId:
    dstsServerId:
    dstsClientHome:
    dstsServerHome:
    dstsServerRealm:
    clientOption: "HttpRequestVersion=2.0;ConnectTimeout=00:00:05;EnableMultipleHttp2Connections=true"

    # Default TimeOut
    defaultQFDClientTimeOutInSec: "5/20"
    
    # Query Front Door Call TimeOut Mapping
    qfdClientTimeOutMappings:
    # qfdClientTimeOutMappings:  <method>|30/60
    # e.g.)
    #   "GetPacificResourceAsync|30/60;
    #    GetPacificCollectionAsync|30/60"
  # ARM Admin Client Related
  armAdminClient:
    endpoints:
    backupEndpoints:
    certificateName: datalabs-arm-admin-prod-gov-rp-art
    clientOption: "HttpRequestVersion=1.1;ConnectTimeout=00:00:05;EnableMultipleHttp2Connections=false"

    # Default TimeOut
    defaultArmAdminClientTimeOutInSec: "10/20"

    # ARM Admin Client Call Mapping
    armAdminClientTimeOutMappings:
    # armAdminClientTimeOutMappings: <method>|30/60
    # e.g.)
    #   "GetManifestConfigAsync|30/60;
    #    GetConfigSpecsAsync|30/60"

keyVault:
  name: datalabsprodgblkv
  clientId:
  tenantId: 33e01921-4d64-4f8c-a055-5bdaffd5e33d

resourceFetcherConfigMap:
  name: resource-fetcher-config
  minLogLevel: Information
  enableGrpcTrace: "false"
  enableHttpClientTrace: "false"
  enableAzureSDKActivity: "false"
  includeRunTimeMetrics: "true"
  includeHttpClientMetrics: "true"
  partnerNames: "abcsolution;sku;capsolution"    # this should match with Partner AKS value file's solution name (solutionInfo -> solutionName)

abcsolutionConfigMap:
  clientIds:    
  armAllowedResourceTypes:
    "microsoft.recoveryservices/vaults/replicationpolicies|2023-01-01;
     microsoft.compute/virtualmachines|2022-11-01,useResourceGraph;
     microsoft.storage/storageaccounts|2023-01-01,useResourceGraph;
     microsoft.resources/subscriptions/resourcegroups|2022-12-01;
     microsoft.resources/subscriptions|2022-12-01;
     microsoft.compute/disks|2023-04-02,useResourceGraph;
     microsoft.containerservice/managedclusters|2023-01-01,useResourceGraph;
     microsoft.storage/storageaccounts/blobservices|2023-01-01;
     microsoft.dbforpostgresql/servers|2017-12-01,useResourceGraph;
     microsoft.dbforpostgresql/flexibleservers|2022-12-01,useResourceGraph;
     microsoft.recoveryservices/vaults|2023-04-01,useResourceGraph;
     microsoft.dataprotection/backupvaults|2023-05-01,useResourceGraph;
     microsoft.classiccompute/virtualmachines|2017-04-01,useResourceGraph"
  armAllowedGenericURIPaths:
  qfdAllowedResourceTypes:
  armAdminAllowedCalls:
  casAllowedCalls:

azrsolutionConfigMap:
  clientIds:    
  armAllowedResourceTypes:
    "microsoft.compute/disks|2023-04-02,useResourceGraph;
    microsoft.network/virtualnetworks|2023-09-01,useResourceGraph;
    microsoft.network/publicipaddresses|2023-09-01,useResourceGraph;
    microsoft.network/networkinterfaces|2023-09-01,useResourceGraph;"
  armAllowedGenericURIPaths:
  qfdAllowedResourceTypes:
  armAdminAllowedCalls:
  casAllowedCalls:

idmappingConfigMap:
  clientIds:
  armAllowedResourceTypes:
  armAllowedGenericURIPaths:
  qfdAllowedResourceTypes:
  armAdminAllowedCalls:
  casAllowedCalls:

skuConfigMap:
  clientIds:
  armAllowedResourceTypes:
  armAllowedGenericURIPaths:
  qfdAllowedResourceTypes:
    "microsoft.features/featureproviders/subscriptionfeatureregistrations|2021-07-01"
  armAdminAllowedCalls:
    "GetManifestConfigAsync|2021-07-01;
     GetConfigSpecsAsync|2021-07-01"
  casAllowedCalls:
    "GetCasCapacityCheckAsync|2016-12-01"

capsolutionConfigMap:
  clientIds:
  armAllowedResourceTypes:
    "microsoft.resources/subscriptions/resourcegroups|2021-04-01;
     microsoft.resources/subscriptions|2022-12-01"
  armAllowedGenericURIPaths:
    "/providers/Microsoft.Authorization/policySetDefinitions|2021-06-01;
     /providers/Microsoft.Authorization/policyDefinitions|2021-06-01;
     /providers|2021-04-01"
  qfdAllowedResourceTypes:
  armAdminAllowedCalls:
  casAllowedCalls:

resourceFetcherImage:
  name: fetcher-container
  tag: [[<BUILD_VERSION>]]
  pullPolicy: Always

# AdminService Info
adminService:
  name: AdminService
  isEnabled: false
  adminPort: 7072
  deployment:
    replicas: 2
    minReadySeconds: 10
    labels:
      name: admin-service
      app: admin-service
  service:
    labels:
      name: admin-service
    port: 443
    targetPort: 443
  serviceAccount:
    name: admin-service-account
    role: kube-admin-role
    rolebinding: kube-admin-role-binding
  sslSecretProvider:
    className: ssl-cert-provider
    certificateName:

adminServiceImage:
  name: adminservice
  tag: latest
  pullPolicy: Always

adminServiceConfigMap:
  name: adminservice-configmap
  serviceName: GenevaAction
  
  dstsRealm:
  dstsName: 
  serviceDns:
  allowedActors:

# monitoring info
monitorInfo:
  name: geneva-services
  hostNetwork: true
  minReadySeconds: 10

genevaAccounts:
  datalabs:
    # volumes, will use hostPath
    mdsdVolumeName: &mdsdVolumeName mdsd-run-vol

mdsd:
  # follow format to enable dependabot https://eng.ms/docs/products/dependabot/automatic_container_updates
  image:
    repository: linuxgeneva-microsoft.azurecr.io/distroless/genevamdsd
    tag: recommended@sha256:c53e0e22db1e8f2a304177358a202a8ef53d1d343f0a74b4ccc9637c2a578279
  containerName: mdsd
  docker_logger: true

  # Authentication
  monitoring_gcs_auth_id_type: AuthMSIToken
  monitoring_gcs_auth_id_miAuthType: mi_res_id

  # Volumes
  hostPathName: *mdsdVolumeName
  hostPathPath: &mdsdHostPath /var/run/mdsd
  run_dir_path: /var/run/mdsd
  applicationEndpoint: &mdsdApplicationEndpoint /var/run/mdsd/default_fluent.socket

  # Unused environment variables in mdsd
  envUnused: "unused"

mdm:
  # follow format to enable dependabot https://eng.ms/docs/products/dependabot/automatic_container_updates
  image:
    repository: linuxgeneva-microsoft.azurecr.io/distroless/genevamdm
    tag: recommended@sha256:ecdb2f6671e718ed233f232f4dc72832f992fd4f6fd25b494b2e81cae11b7a07
  containerName: mdm

  # Input types
  mdm_input: ifx_local,ifx_abstract,influxdb_udp
  mdm_log_level: Info
  statsd_port: 8126

  # Volumes
  hostPathName: &mdmHostVolumeName ifx-path
  ifxmetrics_socket_folder_hostPath: &mdmHostPath /var/etw
  ifxmetrics_socket_folder_path: /var/etw
  ifxmetrics_socket_path: /var/etw/mdm_ifx.socket

  # Connection Type
  applicationEndpoint: &mdmApplicationEndpoint /var/etw/mdm_ifx.socket

telegraf:
  containerName: telegraf
  repository: mcr.microsoft.com/mirror/docker/library/telegraf # https://mcr.microsoft.com/en-us/product/mirror/docker/library/telegraf/tags
  tag: 1.26
  component: platform
  service: platform

  configMapName: telegraf-kubernetes-conf
  
  kubernetesVolume:
    name: telegraf-conf-vol
    path: /etc/telegraf
  limits:
    cpu: 300m
    memory: 2Gi
  requests:
    cpu: 40m
    memory: 500Mi

azureProfiler:
  repository: azureprofilerame.azurecr.io/azureprofilermariner
  tag: 1.0.02076.8
